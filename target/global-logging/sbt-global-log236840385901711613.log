[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m	Note: Unresolved dependencies path:[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":2,"message":"\n\tNote: Unresolved dependencies path:"})[0m
[0m[[0m[31merror[0m] [0m[0msbt.librarymanagement.ResolveException: Error downloading org.scala-lang:scala-library:2.1.0[0m
[0m[[0m[31merror[0m] [0m[0m  Not found[0m
[0m[[0m[31merror[0m] [0m[0m  Not found[0m
[0m[[0m[31merror[0m] [0m[0m  not found: C:\Users\RÃ©mi\.ivy2\localorg.scala-lang\scala-library\2.1.0\ivys\ivy.xml[0m
[0m[[0m[31merror[0m] [0m[0m  not found: https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.1.0/scala-library-2.1.0.pom[0m
[0m[[0m[31merror[0m] [0m[0m	at lmcoursier.CoursierDependencyResolution.unresolvedWarningOrThrow(CoursierDependencyResolution.scala:258)[0m
[0m[[0m[31merror[0m] [0m[0m	at lmcoursier.CoursierDependencyResolution.$anonfun$update$38(CoursierDependencyResolution.scala:227)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.Either$LeftProjection.map(Either.scala:573)[0m
[0m[[0m[31merror[0m] [0m[0m	at lmcoursier.CoursierDependencyResolution.update(CoursierDependencyResolution.scala:227)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.librarymanagement.DependencyResolution.update(DependencyResolution.scala:60)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.resolve$1(LibraryManagement.scala:59)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$12(LibraryManagement.scala:133)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.util.Tracked$.$anonfun$lastOutput$1(Tracked.scala:73)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$20(LibraryManagement.scala:146)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.control.Exception$Catch.apply(Exception.scala:228)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11(LibraryManagement.scala:146)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11$adapted(LibraryManagement.scala:127)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.util.Tracked$.$anonfun$inputChangedW$1(Tracked.scala:219)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.cachedUpdate(LibraryManagement.scala:160)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Classpaths$.$anonfun$updateTask0$1(Defaults.scala:3678)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.Function1.$anonfun$compose$1(Function1.scala:49)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:62)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.std.Transform$$anon$4.work(Transform.scala:68)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.work(Execute.scala:291)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.Thread.run(Thread.java:748)[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"sbt.librarymanagement.ResolveException: Error downloading org.scala-lang:scala-library:2.1.0\r\n  Not found\r\n  Not found\r\n  not found: C:\\Users\\RÃ©mi\\.ivy2\\localorg.scala-lang\\scala-library\\2.1.0\\ivys\\ivy.xml\r\n  not found: https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.1.0/scala-library-2.1.0.pom\r\n\tat lmcoursier.CoursierDependencyResolution.unresolvedWarningOrThrow(CoursierDependencyResolution.scala:258)\r\n\tat lmcoursier.CoursierDependencyResolution.$anonfun$update$38(CoursierDependencyResolution.scala:227)\r\n\tat scala.util.Either$LeftProjection.map(Either.scala:573)\r\n\tat lmcoursier.CoursierDependencyResolution.update(CoursierDependencyResolution.scala:227)\r\n\tat sbt.librarymanagement.DependencyResolution.update(DependencyResolution.scala:60)\r\n\tat sbt.internal.LibraryManagement$.resolve$1(LibraryManagement.scala:59)\r\n\tat sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$12(LibraryManagement.scala:133)\r\n\tat sbt.util.Tracked$.$anonfun$lastOutput$1(Tracked.scala:73)\r\n\tat sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$20(LibraryManagement.scala:146)\r\n\tat scala.util.control.Exception$Catch.apply(Exception.scala:228)\r\n\tat sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11(LibraryManagement.scala:146)\r\n\tat sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11$adapted(LibraryManagement.scala:127)\r\n\tat sbt.util.Tracked$.$anonfun$inputChangedW$1(Tracked.scala:219)\r\n\tat sbt.internal.LibraryManagement$.cachedUpdate(LibraryManagement.scala:160)\r\n\tat sbt.Classpaths$.$anonfun$updateTask0$1(Defaults.scala:3678)\r\n\tat scala.Function1.$anonfun$compose$1(Function1.scala:49)\r\n\tat sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:62)\r\n\tat sbt.std.Transform$$anon$4.work(Transform.scala:68)\r\n\tat sbt.Execute.$anonfun$submit$2(Execute.scala:282)\r\n\tat sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)\r\n\tat sbt.Execute.work(Execute.scala:291)\r\n\tat sbt.Execute.$anonfun$submit$1(Execute.scala:282)\r\n\tat sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)\r\n\tat sbt.CompletionService$$anon$2.call(CompletionService.scala:64)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)"})[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched json error for requestId None: {"code":-32603,"message":"(\u001b[31mupdate\u001b[0m) sbt.librarymanagement.ResolveException: Error downloading org.scala-lang:scala-library:2.1.0\r\n  Not found\r\n  Not found\r\n  not found: C:\\Users\\RÃ©mi\\.ivy2\\localorg.scala-lang\\scala-library\\2.1.0\\ivys\\ivy.xml\r\n  not found: https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.1.0/scala-library-2.1.0.pom"}[0m
[0m[[0m[31merror[0m] [0m[0m([31mupdate[0m) sbt.librarymanagement.ResolveException: Error downloading org.scala-lang:scala-library:2.1.0[0m
[0m[[0m[31merror[0m] [0m[0m  Not found[0m
[0m[[0m[31merror[0m] [0m[0m  Not found[0m
[0m[[0m[31merror[0m] [0m[0m  not found: C:\Users\RÃ©mi\.ivy2\localorg.scala-lang\scala-library\2.1.0\ivys\ivy.xml[0m
[0m[[0m[31merror[0m] [0m[0m  not found: https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.1.0/scala-library-2.1.0.pom[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"(\u001b[31mupdate\u001b[0m) sbt.librarymanagement.ResolveException: Error downloading org.scala-lang:scala-library:2.1.0\r\n  Not found\r\n  Not found\r\n  not found: C:\\Users\\RÃ©mi\\.ivy2\\localorg.scala-lang\\scala-library\\2.1.0\\ivys\\ivy.xml\r\n  not found: https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.1.0/scala-library-2.1.0.pom"})[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 29 s, completed 7 fÃ©vr. 2022 14:28:12[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/main.scala","languageId":"scala","version":1,"text":"import scala.io.Source\r\nobject MainApp extends App{\r\n  val driver1 = new reactivemongo.api.AsyncDriver\r\n  reader.parser(\"src/main/scala/file.csv\",reader.Point.csvtoP)\r\n  // you can also use the Java Scanner class, if desired\r\n  while (!(scanner.nextLine.equals)==\"Query\" || !(scanner.nextLine.equals)==\"Reports\") //Ã  tester\r\n    val scanner = new java.util.Scanner(System.in)\r\n    print(\"Query or Reports?\")\r\n    val input = scanner.nextLine()\r\n    if (input==\"Query\" || input==\"Reports\"){\r\n      print(s\"You choose $input\")\r\n    } else { print(s\"Please choose Query or Reports\")}\r\n\r\n  \r\n  //Pour le projet tout doit Ãªtre sur github, chacun partage\r\n  //le parsing prend en param une fonction avec des points en 2D ou 3D\r\n  //lire au moins le fichier, trouver le fichier, le charger\r\n  //collection [string] => Option[P] ou Try[P] (mauvais pour la perf) ou Either[Int/String, P] (signature deserialization) \r\n  //Either code d'erreur\r\n  //def t[P](file:String, f : function de type P) : collection[P]  fonction d'ordre supÃ©rieur\r\n  //Point (x :Int, y:Int, z:Option[Int])\r\n  //deserializer dans le companion object d'une case class\r\n  //must to do : deserialize\r\n  //reactive mongo +mongodb\r\n  //docker image\r\n  //faire unmodel pour chacun des type mÃ©tier\r\n  val l=List((2, \"ook!\"), (1, \"lolcode\"), (3, \"intercal\"), (5, \"ook ook\"), (1, \"brainfuck\"), (2, \"ArnoldC\"))\r\n  val bibli=List(\r\n    List(\"ook!\",\"ook ook\"),\r\n    List(\"lolcode\"),\r\n    List(\"intercal\"),\r\n    List(\"brainfuck\"),\r\n    List(\"ArnoldC\"),\r\n    )\r\n  def count_vote(list:List[(Int, String)],bibli:List[List[String]]): List[(Object,Int)] = {\r\n    list.map(x=> if (bibli.exists(_.contains(x._2))) ( x._1 , bibli.filter(_.contains(x._2))(0)(0) ) else (x._1,None))\r\n    .groupBy(_._2).map { \r\n      case (key,value) => key -> (value.map(_._1)).sum}.toList\r\n    }\r\n  println(count_vote(l,bibli))\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/main.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/model.scala","languageId":"scala","version":1,"text":"object model {\r\n    \r\n    case class airportObj(iso_country:String,/*ident:String*/)\r\n    case class CountryObj(country_code:String,country_name:String)\r\n    case class runwaysObj(surface:String,/*airports_ident:String*/)\r\n    /*ident:airport==airports_ident:runways*/\r\n\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/model.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/reader.scala","languageId":"scala","version":1,"text":"import scala.io.Source\r\nobject reader {\r\n    def parser[P](str: String, csvtoP : Array[String] => Option[P]): /*Iterator[P]*/Any = {\r\n        Source.fromFile(str)\r\n        .getLines()\r\n        .map(_.split(\",\"))\r\n        .flatMap(Point.csvtoP)\r\n    }\r\n    case class Point(x:Int, y: Int, z: Option[Int] = None)\r\n    //case class = plusieurs mÃ©thodes prÃ©dÃ©fini\r\n    object Point {\r\n        def csvtoP(str:Array[String]) : Option[Any] = Option(str)\r\n        .map{_.map(_.trim)\r\n        .map(x => util.Try(x.toInt).toOption) match {\r\n            case Array(Some(x),Some(y)) => Some(Point(x.toInt, y.toInt))\r\n            case Array(Some(x),Some(y),Some(z)) => Some(Point(x.toInt, y.toInt,Some(z.toInt)))\r\n            case _ =>None\r\n            }\r\n        }\r\n    }\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/reader.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/Reports.scala","languageId":"scala","version":1,"text":"object report {\r\n    def highest_number_of_airports(n:Int): Option[Int] = {\r\n        Some(n)\r\n    }\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/Reports.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/Queries.scala","languageId":"scala","version":1,"text":""}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/Queries.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/model.scala","languageId":"scala","version":1,"text":"object model {\r\n    \r\n    case class airportObj(iso_country:String,/*ident:String*/)\r\n    case class CountryObj(country_code:String,country_name:String)\r\n    case class runwaysObj(surface:String,/*airports_ident:String*/)\r\n    /*ident:airport==airports_ident:runways*/\r\n\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/model.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/R%C3%A9mi/Desktop/Efrei%20Paris/M2/Scala%20Programming/repo_project/Scala_Project/src/main/scala/main.scala","languageId":"scala","version":1,"text":"import scala.io.Source\r\nobject MainApp extends App{\r\n  val driver1 = new reactivemongo.api.AsyncDriver\r\n  reader.parser(\"src/main/scala/file.csv\",reader.Point.csvtoP)\r\n  // you can also use the Java Scanner class, if desired\r\n  while (!(scanner.nextLine.equals)==\"Query\" || !(scanner.nextLine.equals)==\"Reports\") //Ã  tester\r\n    val scanner = new java.util.Scanner(System.in)\r\n    print(\"Query or Reports?\")\r\n    val input = scanner.nextLine()\r\n    if (input==\"Query\" || input==\"Reports\"){\r\n      print(s\"You choose $input\")\r\n    } else { print(s\"Please choose Query or Reports\")}\r\n\r\n  \r\n  //Pour le projet tout doit Ãªtre sur github, chacun partage\r\n  //le parsing prend en param une fonction avec des points en 2D ou 3D\r\n  //lire au moins le fichier, trouver le fichier, le charger\r\n  //collection [string] => Option[P] ou Try[P] (mauvais pour la perf) ou Either[Int/String, P] (signature deserialization) \r\n  //Either code d'erreur\r\n  //def t[P](file:String, f : function de type P) : collection[P]  fonction d'ordre supÃ©rieur\r\n  //Point (x :Int, y:Int, z:Option[Int])\r\n  //deserializer dans le companion object d'une case class\r\n  //must to do : deserialize\r\n  //reactive mongo +mongodb\r\n  //docker image\r\n  //faire unmodel pour chacun des type mÃ©tier\r\n  val l=List((2, \"ook!\"), (1, \"lolcode\"), (3, \"intercal\"), (5, \"ook ook\"), (1, \"brainfuck\"), (2, \"ArnoldC\"))\r\n  val bibli=List(\r\n    List(\"ook!\",\"ook ook\"),\r\n    List(\"lolcode\"),\r\n    List(\"intercal\"),\r\n    List(\"brainfuck\"),\r\n    List(\"ArnoldC\"),\r\n    )\r\n  def count_vote(list:List[(Int, String)],bibli:List[List[String]]): List[(Object,Int)] = {\r\n    list.map(x=> if (bibli.exists(_.contains(x._2))) ( x._1 , bibli.filter(_.contains(x._2))(0)(0) ) else (x._1,None))\r\n    .groupBy(_._2).map { \r\n      case (key,value) => key -> (value.map(_._1)).sum}.toList\r\n    }\r\n  println(count_vote(l,bibli))\r\n}"}})[0m
